{"version":3,"sources":["components/movies.js","components/moviesList.js","components/formatDate.js","components/movieDetails/api.js","components/movieDetails/movieDetail.js","components/movieDetails/MovieDetailUtils.js","components/favoritesList.js","App.js","serviceWorker.js","index.js"],"names":["Movie","_ref","movie","onToggleFavorite","isFavorite","onClick","query","page","React","createElement","className","Link","to","concat","id","style","textDecoration","color","src","backdrop_path","alt","title","overview","length","substring","xmlns","viewBox","e","preventDefault","width","height","d","fill","stroke","strokeWidth","MoviesList","favorites","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","setQuery","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","error","setError","_useState9","_useState10","setPage","_useState11","_useState12","totalResults","setTotalResults","API_URL","fetchMovies","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newPage","isInitialSearch","res","data","filteredMovies","_args","arguments","wrap","_context","prev","next","undefined","abrupt","fetch","encodeURIComponent","sent","ok","Error","json","results","filter","poster_path","slice","localStorage","setItem","JSON","stringify","prevMovies","_toConsumableArray","total_results","t0","console","finish","stop","apply","debouncedFetchMovies","useCallback","debounce","useEffect","storedQuery","getItem","storedPage","parseInt","storedMovies","parse","handleSearch","totalPages","Math","ceil","shouldShowMoreButton","Fragment","type","value","onChange","target","onKeyDown","key","placeholder","map","nextPage","formatDate","dateString","Date","toLocaleDateString","year","month","day","API_KEY","BASE_URL","fetchMovie","response","_x","fetchImages","_callee2","_context2","_x2","fetchCredits","_ref3","_callee3","_context3","_x3","fetchVideos","_ref4","_callee4","_context4","_x4","fetchSimilarMovies","_ref5","_callee5","_context5","_x5","fetchStreamingProviders","_ref6","_callee6","_context6","_x6","MovieDetail","match","location","useLocation","params","URLSearchParams","search","get","setMovie","images","setImages","trailerKey","setTrailerKey","director","setDirector","cast","setCast","similarMovies","setSimilarMovies","_useState13","_useState14","selectedImageIndex","setSelectedImageIndex","_useState15","_useState16","isTrailerModalOpen","setIsTrailerModalOpen","_useState17","_useState18","isImageModalOpen","setIsImageModalOpen","_useState19","_useState20","streamingProviders","setStreamingProviders","movieData","imagesData","creditsData","castWithImages","videosData","trailerVideo","similarMoviesData","streamingProvidersData","backdrops","crew","find","person","job","name","member","profile_path","video","site","US","flatrate","fetchData","window","scrollTo","backgroundImage","tagline","Overdrive","release_date","vote_average","vote_count","genres","genre","join","provider","index","href","provider_name","toLowerCase","replace","rel","logo_path","character","image","file_path","setSelectedIndex","setIsModalOpen","openModal","prevIndex","showPreviousImage","stopPropagation","showNextImage","frameBorder","allow","allowFullScreen","FavoritesPage","queryClient","QueryClient","App","setFavorites","headerClass","setHeaderClass","handleToggleFavorite","prevFavorites","updatedFavorites","some","fav","log","result","handleScroll","scrollY","addEventListener","removeEventListener","QueryClientProvider","client","BrowserRouter","basename","Switch","Route","exact","path","render","component","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7eea5109.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst BACKDROP_PATH = 'http://image.tmdb.org/t/p/w780';\n\nconst Movie = ({ movie, onToggleFavorite, isFavorite, query, page, onClick }) => {\n  return (\n    <div className='single-card'>\n      <Link \n        to={`/${movie.id}`} \n        style={{ textDecoration: 'none', color: 'inherit' }}\n        onClick={onClick} \n      >\n        <div className=\"movie-card\">\n          <div className=\"movie-details\">\n            <img\n              className=\"card-img\"\n              src={`${BACKDROP_PATH}${movie.backdrop_path}`}\n              alt={movie.title}\n            />\n            <h2 className=\"title\">{movie.title}</h2>\n            <p className=\"description\">\n              {movie.overview.length > 100 ? movie.overview.substring(0, 100) + '...' : movie.overview}\n            </p>\n            <div className='flex card-icons'>\n              <p className='read-more'>Read More</p>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                className={`favorite-heart ${isFavorite ? 'active' : ''}`}\n                onClick={(e) => {\n                  e.preventDefault(); // Prevent navigation to movie detail\n                  onToggleFavorite(movie); // Correctly toggle favorite\n                }}\n                width=\"30px\"\n                height=\"30px\"\n              >\n                <path\n                  d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n                  fill={isFavorite ? \"red\" : \"none\"}\n                  stroke={isFavorite ? \"red\" : \"black\"}\n                  strokeWidth=\"1\"\n                />\n              </svg>\n\n            </div>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nMovie.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    backdrop_path: PropTypes.string.isRequired,\n  }).isRequired,\n  onToggleFavorite: PropTypes.func.isRequired,\n  isFavorite: PropTypes.bool.isRequired,\n};\n\nexport default Movie;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Movie from './movies';\nimport debounce from 'lodash.debounce';\n\nconst MoviesList = ({ favorites, onToggleFavorite, isFavorite }) => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState(0);\n\n  const API_KEY = 'a62fd138fc3adf6aa51790c63f1f498e';\n  const API_URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=`;\n\n  const fetchMovies = async (newPage = 1, isInitialSearch = false) => {\n    if (!query) return; // Avoid fetching if there's no query\n\n    setIsLoading(true);\n    setError('');\n    try {\n      const res = await fetch(`${API_URL}${encodeURIComponent(query)}&page=${newPage}`);\n      if (!res.ok) throw new Error('Network response was not ok');\n      const data = await res.json();\n\n      let filteredMovies = data.results.filter(movie => movie.backdrop_path && movie.poster_path);\n\n      if (isInitialSearch) {\n        filteredMovies = filteredMovies.slice(0, 6); // Initial search limit\n        setMovies(filteredMovies); // Set movies for the first search\n        localStorage.setItem('movies', JSON.stringify(filteredMovies)); // Replace movies in localStorage\n      } else {\n        setMovies(prevMovies => [...prevMovies, ...filteredMovies]); // Append movies for subsequent pages\n        localStorage.setItem('movies', JSON.stringify([...movies, ...filteredMovies])); // Update movies in localStorage\n      }\n\n      setTotalResults(data.total_results);\n    } catch (error) {\n      setError('Error fetching movies. Please try again.');\n      console.error('Error fetching movies:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Create a debounced version of the fetchMovies function\n  const debouncedFetchMovies = useCallback(\n    debounce((query, page, isInitialSearch) => fetchMovies(page, isInitialSearch), 500),\n    []\n  );\n\n  // Retrieve query and page from localStorage on mount\n  useEffect(() => {\n    const storedQuery = localStorage.getItem('query') || '';\n    const storedPage = parseInt(localStorage.getItem('page')) || 1;\n    const storedMovies = JSON.parse(localStorage.getItem('movies')) || [];\n\n    setQuery(storedQuery);\n    setPage(storedPage);\n    setMovies(storedMovies); // Restore movies from localStorage\n\n    if (storedQuery) {\n      debouncedFetchMovies(storedQuery, storedPage, true);\n    } else {\n      setMovies([]); // Clear movies if the query is empty\n    }\n  }, [debouncedFetchMovies]);\n\n  // Store query and page in localStorage whenever they change\n  useEffect(() => {\n    if (query) {\n      localStorage.setItem('query', query);\n    }\n    if (page) {\n      localStorage.setItem('page', page);\n    }\n  }, [query, page]);\n\n  // Handle search and show more buttons\n  const handleSearch = () => {\n    setPage(1); // Reset page to 1 for new search\n    localStorage.setItem('page', 1); // Store page reset in localStorage\n    fetchMovies(1, true); // Perform initial search\n  };\n\n  const handleShowMore = () => {\n    const nextPage = page + 1;\n    setPage(nextPage); // Increment page number\n    localStorage.setItem('page', nextPage); // Store next page in localStorage\n    fetchMovies(nextPage); // Fetch movies for the next page\n  };\n\n  // Handle key down for search input\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  const totalPages = Math.ceil(totalResults / 20);\n  const shouldShowMoreButton = movies.length > 0 && page < totalPages;\n\n  return (\n    <>\n      <div className='search-contain'>\n        <input\n          className='search-bar'\n          type=\"text\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          onKeyDown={handleKeyDown}\n          placeholder=\"Search for movies\"\n        />\n        <button \n          className='button'\n          onClick={handleSearch} \n        >\n          Search\n        </button>\n      </div>\n      {isLoading && <p className='loading'>Loading...</p>}\n      {error && <p className='loading'>{error}</p>}\n      <div className='container'>\n        <div className='flex flex-wrap'>\n          {movies.length > 0 ? (\n            movies.map((movie) => (\n              <Movie \n                query={query} \n                page={page} \n                key={movie.id} \n                movie={movie}\n                onToggleFavorite={onToggleFavorite} // Pass the function as a prop\n                isFavorite={isFavorite(movie)} // Pass the result of the function as a prop\n              />\n            ))\n          ) : (\n            !isLoading && !error && <p className='no-movies-found'>Try searching a movie title.</p>\n          )}\n        </div>\n        {shouldShowMoreButton && (\n          <div className=\"show-more-parent flex justify-content-center\">\n            <button className='show-more-button button' onClick={handleShowMore}>\n              Show More\n            </button>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  favorites: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      backdrop_path: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onToggleFavorite: PropTypes.func.isRequired,\n  isFavorite: PropTypes.func.isRequired,\n};\n\nexport default MoviesList;\n","  // Function to format the release date\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    });\n  };\n\n  export default formatDate;","const API_KEY = 'a62fd138fc3adf6aa51790c63f1f498e';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchMovie = async (id) => {\n  const response = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return response.json();\n};\n\nexport const fetchImages = async (id) => {\n  const response = await fetch(`${BASE_URL}/movie/${id}/images?api_key=${API_KEY}`);\n  return response.json();\n};\n\nexport const fetchCredits = async (id) => {\n  const response = await fetch(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.json();\n};\n\nexport const fetchVideos = async (id) => {\n  const response = await fetch(`${BASE_URL}/movie/${id}/videos?api_key=${API_KEY}`);\n  return response.json();\n};\n\nexport const fetchSimilarMovies = async (id) => {\n  const response = await fetch(`${BASE_URL}/movie/${id}/similar?api_key=${API_KEY}&language=en-US`);\n  return response.json();\n};\n\nexport const fetchStreamingProviders = async (id) => {\n  const response = await fetch(`${BASE_URL}/movie/${id}/watch/providers?api_key=${API_KEY}`);\n  return response.json();\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport Overdrive from 'react-overdrive';\nimport formatDate from '../formatDate';\nimport {\n  fetchMovie,\n  fetchImages,\n  fetchCredits,\n  fetchVideos,\n  fetchSimilarMovies,\n  fetchStreamingProviders\n} from './api';\nimport {\n  openModal,\n  closeModal,\n  showNextImage,\n  showPreviousImage\n} from './MovieDetailUtils';\n\nconst BACKDROP_PATH = 'http://image.tmdb.org/t/p/w1280';\nconst POSTER_PATH = 'http://image.tmdb.org/t/p/w342';\nconst IMAGE_PATH = 'http://image.tmdb.org/t/p/w200';\nconst PROFILE_PATH = 'http://image.tmdb.org/t/p/w185';\n\nconst MovieDetail = ({ match }) => {\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const query = params.get('query');\n  const page = params.get('page');\n  \n  const [movie, setMovie] = useState({});\n  const [images, setImages] = useState([]);\n  const [trailerKey, setTrailerKey] = useState(null);\n  const [director, setDirector] = useState('');\n  const [cast, setCast] = useState([]);\n  const [similarMovies, setSimilarMovies] = useState([]);\n  const [selectedImageIndex, setSelectedImageIndex] = useState(null);\n  const [isTrailerModalOpen, setIsTrailerModalOpen] = useState(false);\n  const [isImageModalOpen, setIsImageModalOpen] = useState(false);\n  const [streamingProviders, setStreamingProviders] = useState([]);\n\n  useEffect(() => {\n    // Store query and page in localStorage\n    if (query) localStorage.setItem('query', query);\n    if (page) localStorage.setItem('page', page);\n\n    const fetchData = async () => {\n      const movieData = await fetchMovie(match.params.id);\n      setMovie(movieData);\n\n      const imagesData = await fetchImages(match.params.id);\n      setImages(imagesData.backdrops.slice(0, 8));\n\n      const creditsData = await fetchCredits(match.params.id);\n      const director = creditsData.crew.find(person => person.job === 'Director');\n      setDirector(director ? director.name : 'N/A');\n\n      const castWithImages = creditsData.cast.filter(member => member.profile_path);\n      setCast(castWithImages.slice(0, 5));\n\n      const videosData = await fetchVideos(match.params.id);\n      const trailerVideo = videosData.results.find(video => video.type === 'Trailer' && video.site === 'YouTube');\n      setTrailerKey(trailerVideo ? trailerVideo.key : null);\n\n      const similarMoviesData = await fetchSimilarMovies(match.params.id);\n      const filteredMovies = similarMoviesData.results.filter(movie => movie.backdrop_path);\n      setSimilarMovies(filteredMovies.slice(0, 3));\n\n      const streamingProvidersData = await fetchStreamingProviders(match.params.id);\n      if (streamingProvidersData.results.US && streamingProvidersData.results.US.flatrate) {\n        setStreamingProviders(streamingProvidersData.results.US.flatrate);\n      }\n    };\n\n    fetchData();\n  }, [match.params.id]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [movie.id]);\n\n  const handleShare = () => {\n    const url = window.location.href;\n    const text = `Check out this movie: ${movie.title}`;\n    if (navigator.share) {\n      navigator.share({\n        title: movie.title,\n        text,\n        url,\n      }).catch(console.error);\n    } else {\n      alert(\"Your browser doesn't support the Web Share API.\");\n    }\n  };\n\n  const shareOnTwitter = () => {\n    const url = `https://twitter.com/intent/tweet?url=${encodeURIComponent(window.location.href)}&text=${encodeURIComponent(`Check out this movie: ${movie.title}`)}`;\n    window.open(url, '_blank');\n  };\n\n  return (\n    <>\n      <div className=\"movie-wrapper\" style={{ backgroundImage: `url(${BACKDROP_PATH}${movie.backdrop_path})` }}>\n      </div>\n      <div className='container relative'>\n        <h1 className='movie-title text-center'>\n          {movie.title}\n        </h1>\n        <em className='block text-center'>{movie.tagline}</em>\n        <div className=\"movie-info\">\n          <Overdrive id={movie.id}>\n            <img\n              className=\"poster\"\n              src={`${POSTER_PATH}${movie.poster_path}`}\n              alt={movie.title}\n            />\n          </Overdrive>\n          <div className='detailed-movie'>\n            <h3>Release Date:</h3>\n            <p>{movie.release_date ? formatDate(movie.release_date) : 'N/A'}</p>\n            <h3>Director:</h3>\n            <p>{director}</p>\n            <h3>Summary:</h3>\n            <p>{movie.overview}</p>\n            <h3>Vote Average:</h3>\n            <p>{movie.vote_average}/10 with {movie.vote_count} votes</p>\n            <h3>Genres:</h3>\n            <p>\n              {movie.genres && movie.genres.length > 0\n                ? movie.genres.map(genre => genre.name).join(', ')\n                : 'No genres available'}\n            </p>\n              {streamingProviders.length > 0 ? (\n                <>\n                  <h3>Watch on:</h3>\n                  <div className=\"gap streaming-providers\">\n                    {streamingProviders.map((provider, index) => (\n                      <div className=\"stream-contain\" key={index}>\n                        <a className=\"movie-card stream-card\" href={`https://www.${provider.provider_name.toLowerCase().replace(' ', '')}.com`} target=\"_blank\" rel=\"noopener noreferrer\">\n                          <img\n                              src={`https://image.tmdb.org/t/p/original${provider.logo_path}`}\n                              alt={provider.provider_name}\n                              className=\"provider-logo\"\n                            />\n                          {provider.provider_name}\n                        </a>\n                      </div>\n                    ))}\n                  </div>\n                </>\n              ) : (\n                <>\n                  <h3>Watch on:</h3>\n                  <p>Not currently streaming.</p>\n                </>\n              )}\n            {trailerKey && (\n              <button onClick={() => setIsTrailerModalOpen(true)} className=\"button trailer-button\">Watch Trailer</button>\n            )}\n          </div>\n        </div>\n\n        {cast.length > 0 && (\n          <div className=\"cast-section similar-movies\">\n            <h2 className='text-center'>Cast:</h2>\n            <div className=\"image-grid gap flex flex-wrap justify-content-center\">\n              {cast.map((member, index) => (\n                <div key={index} className=\"cast-member\">\n                  <div className='cast-contain'>\n                    <img\n                      src={`${PROFILE_PATH}${member.profile_path}`}\n                      alt={member.name}\n                      className=\"cast-image\"\n                    />\n                  </div>\n                                    <p className=\"cast-name\">{member.name}</p>\n                  <p className=\"cast-character\">{member.character}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {images.length > 0 && (\n          <div className='similar-movies'>\n            <h2 className='text-center'>Images from {movie.title}:</h2>\n            <div className=\"image-grid gap flex flex-wrap justify-content-center\">\n              {images.map((image, index) => (\n                <img\n                  key={index}\n                  src={`${IMAGE_PATH}${image.file_path}`}\n                  alt={`Backdrop ${index + 1}`}\n                  onClick={() => openModal(index, setSelectedImageIndex, setIsImageModalOpen)}\n                />\n              ))}\n            </div>\n          </div>\n        )}\n        {isImageModalOpen && selectedImageIndex !== null && (\n          <div className=\"image-modal\" onClick={() => closeModal(setIsImageModalOpen)}>\n            <button className=\"prev-button\" onClick={(e) => showPreviousImage(selectedImageIndex, images, setSelectedImageIndex)}>&lt;</button>\n            <img\n              src={`${IMAGE_PATH}${images[selectedImageIndex].file_path}`}\n              alt={`Backdrop ${selectedImageIndex + 1}`}\n              onClick={e => e.stopPropagation()} \n            />\n            <button className=\"next-button\" onClick={(e) => showNextImage(selectedImageIndex, images, setSelectedImageIndex)}>&gt;</button>\n          </div>\n        )}\n\n        {similarMovies.length > 0 && (\n          <div className=\"similar-movies\">\n            <h2 className='text-center'>Similar Movies:</h2>\n            <div className=\"justify-content-center flex flex-wrap\">\n              {similarMovies.map(movie => (\n                <div key={movie.id} className=\"single-card\">\n                  <Link to={`/${movie.id}`} style={{ textDecoration: 'none', color: 'inherit' }}>\n                    <div className=\"movie-card\">\n                      <div className=\"movie-details\">\n                        <img\n                          className=\"card-img\"\n                          src={`${BACKDROP_PATH}${movie.backdrop_path}`}\n                          alt={movie.title}\n                        />\n                        <h2 className=\"title\">{movie.title}</h2>\n                        <p className=\"description\">\n                          {movie.overview.length > 100 ? movie.overview.substring(0, 100) + '...' : movie.overview}\n                        </p>\n                        <p className='read-more'>Read More</p>\n                      </div>\n                    </div>\n                  </Link>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {isTrailerModalOpen && trailerKey && (\n          <div className=\"trailer-modal\">\n            <div className=\"trailer-container\">\n              <button onClick={() => setIsTrailerModalOpen(false)} className=\"trailer-close\">&times;</button>\n              <iframe\n                title=\"movie-trailer\"\n                width=\"100%\"\n                height=\"400px\"\n                src={`https://www.youtube.com/embed/${trailerKey}`}\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n              />\n            </div>\n          </div>\n        )}\n        <div className='back-parent flex justify-content-center'>\n          <Link to=\"/\" className=\"button\">Back to Movies</Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetail;\n\n","export const openModal = (index, setSelectedIndex, setIsModalOpen) => {\n  setSelectedIndex(index);\n  setIsModalOpen(true);\n};\n\nexport const closeModal = (setIsModalOpen) => {\n  setIsModalOpen(false);\n};\n\nexport const showNextImage = (index, images, setSelectedIndex) => {\n  setSelectedIndex((prevIndex) => (prevIndex < images.length - 1 ? prevIndex + 1 : 0));\n};\n\nexport const showPreviousImage = (index, images, setSelectedIndex) => {\n  setSelectedIndex((prevIndex) => (prevIndex > 0 ? prevIndex - 1 : images.length - 1));\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Movie from './movies'; \nimport { Link } from 'react-router-dom';\n\nconst FavoritesPage = ({ favorites, onToggleFavorite }) => {\n\n    return (\n        <div className=\"favorites-page\">\n            <h1 className='text-center'>Your Fave(s)</h1>\n            <div className='container'>\n                <div className='flex flex-wrap'>\n\n                        {favorites.length > 0 ? (\n                            favorites.map(movie => (\n                                <Movie\n                                    key={movie.id}\n                                    movie={movie}\n                                    onToggleFavorite={onToggleFavorite}\n                                    isFavorite={true} // Always true in the favorites page\n                                />\n                            ))\n                        ) : (\n                            <div className='full-width'>\n                                <p className='text-center'>No favorites added yet.</p>\n                            </div>\n                        )}\n\n                </div>\n                <div className='back-parent flex justify-content-center'>\n                    <Link to={`/`} className=\"button\">Back to Home</Link>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFavoritesPage.propTypes = {\n    favorites: PropTypes.arrayOf(\n        PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            overview: PropTypes.string.isRequired,\n            id: PropTypes.number.isRequired,\n            backdrop_path: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    onToggleFavorite: PropTypes.func.isRequired,\n};\n\nexport default FavoritesPage;\n","import React, { useState, useEffect } from 'react';\nimport { Route, BrowserRouter, Switch, Link } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'; // Import QueryClient and QueryClientProvider\nimport './App.css';\nimport './styles/styles-details-2.css';\nimport './styles/styles.css';\nimport './styles/search.css';\nimport './styles/movie-card.css';\nimport './styles/modal.css';\nimport MoviesList from './components/moviesList';\nimport MovieDetail from './components/movieDetails/movieDetail';\nimport FavoritesPage from './components/favoritesList';\n\n// Create a QueryClient instance\nconst queryClient = new QueryClient();\n\nconst App = () => {\n  const [favorites, setFavorites] = useState([]);\n  const [headerClass, setHeaderClass] = useState('');\n\n  const handleToggleFavorite = (movie) => {\n    setFavorites(prevFavorites => {\n      const isFavorite = prevFavorites.some(fav => fav.id === movie.id);\n      const updatedFavorites = isFavorite\n        ? prevFavorites.filter(fav => fav.id !== movie.id)\n        : [...prevFavorites, movie];\n      console.log(\"Updated favorites in App:\", updatedFavorites); // Debugging\n      return updatedFavorites;\n    });\n  };\n\n  const isFavorite = (movie) => {\n    const result = favorites.some(fav => fav.id === movie.id);\n    console.log(\"Is movie favorite in App:\", result); // Debugging\n    return result;\n  };\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.scrollY > 36) {\n        setHeaderClass('scroll');\n      } else {\n        setHeaderClass('');\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  return (\n    <QueryClientProvider client={queryClient}> {/* Wrap your application with QueryClientProvider */}\n      <BrowserRouter basename='/'>\n        <div className=\"App\">\n          <header className={`search-header ${headerClass}`}>\n            <Link to=\"/\">\n              <div className='logo'>\n                <div>\n                  <h1>Searchflix</h1>\n                  <p>A Movie search engine created by @FrontEndMike</p>\n                </div>\n              </div>\n            </Link>\n\n            <Link to=\"/favorites\">\n              <div className='flex favorites-icon'>\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 24 24\"\n                    className={`favorite-heart ${favorites.length > 0 ? 'active' : ''}`}\n                    width=\"30px\"\n                    height=\"30px\"\n                  >\n                  <path\n                    d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n                    fill={favorites.length > 0 ? \"red\" : \"transparent\"}\n                    stroke={favorites.length > 0 ? \"red\" : \"white\"}\n                    strokeWidth=\"1\"\n                  />\n                </svg>\n              </div>\n            </Link>\n          </header>\n          <Switch>\n            <Route exact path=\"/\" render={() => (\n              <MoviesList\n                favorites={favorites}\n                onToggleFavorite={handleToggleFavorite}\n                isFavorite={isFavorite}\n              />\n            )} />\n            <Route path=\"/favorites\" render={() => (\n              <FavoritesPage\n                favorites={favorites}\n                onToggleFavorite={handleToggleFavorite}\n              />\n            )} />\n            <Route path=\"/:id\" component={MovieDetail} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </QueryClientProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}